{"version":3,"sources":["./src/app/directives/vehicle.directive.ts","./src/app/mocks/index.ts","./src/environments/environment.ts","./src/app/mocks/vechicles.mock.ts","./src/app/services/vehicle.service.ts","./src/app/components/vehicles/vehicles.component.ts","./src/app/components/vehicles/vehicles.component.html","./src/app/directives/index.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pipes/transform-vehicle.pipe.ts","./src/app/services/index.ts","./src/app/pipes/index.ts","./src/app/components/loader/loader.component.ts","./src/app/components/loader/loader.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {\n    AfterViewInit,\n    Directive,\n    Input,\n    ElementRef,\n    Renderer2\n} from '@angular/core';\n\nconst pattern = /(^https)/;\nconst url = 'https://www.google.com/search?q=';\n\n@Directive({\n    selector: '[appVehicle]'\n})\n\nexport class VehicleDirective implements AfterViewInit {\n\n    @Input() appVehicle: string = '';\n    @Input() href: string | null = null;\n\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'href', '');\n    }\n\n    ngAfterViewInit(): void {\n        if (!pattern.test(this.appVehicle)) {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'color', '#F00');\n        }\n\n        if (this.href !== null) {\n            this.renderer.setAttribute(this.elementRef.nativeElement, 'href',\n                `${url}${this.href.replace(/ /g, \"+\")}`);\n            this.renderer.setAttribute(this.elementRef.nativeElement, 'target', '_blank');\n        }\n    }\n}\n","export * from './vechicles.mock';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import * as faker from 'faker';\n\n\nconst count = 20;\nlet seed = 1222;\n\n// tslint:disable-next-line:typedef\nfunction getFakeVehicle() {\n  seed += 1;\n  faker.seed(seed);\n\n  return {\n    color: faker.vehicle.color(),\n    fuel: faker.vehicle.fuel(),\n    manufacturer: faker.vehicle.manufacturer(),\n    model: faker.vehicle.model(),\n    type: faker.vehicle.type(),\n    vehicle: faker.vehicle.vehicle(),\n    vin: faker.vehicle.vin(),\n\n    post: {\n      slug: faker.helpers.slugify(faker.name.title()),\n      protocol: faker.internet.protocol(),\n    },\n\n    cost: {\n      account: faker.finance.account(),\n      accountName: faker.finance.accountName(),\n      amount: faker.finance.amount(),\n      currencyCode: faker.finance.currencyCode(),\n    },\n  };\n}\n\nexport const MOCK_VEHICLES = new Array(count).fill(0).map(getFakeVehicle);\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { MOCK_VEHICLES } from '../mocks';\nimport { Vehicle } from '../models';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class VehicleService {\n    constructor() { }\n\n    public getVehicles(): Observable<Vehicle[]> {\n        return of(MOCK_VEHICLES).pipe(delay(2000));\n    };\n}\n","import { Component, Input } from '@angular/core';\nimport { Vehicle } from '../../models';\n\n\n@Component({\n    selector: 'app-vehicles',\n    templateUrl: './vehicles.component.html',\n    styleUrls: ['./vehicles.component.css']\n})\n\nexport class VehicleComponent {\n    @Input() vehicles: Vehicle[]\n}\n","<div class=\"vehicles\">\n    <div class=\"head-list\">\n        <p class=\"head-list__num-list\">â„–</p>\n        <p class=\"head-list__added\">Added from</p>\n        <p class=\"head-list__vehicle\">Vehicle</p>\n        <p class=\"head-list__price\">Price</p>\n    </div>\n    <ul class=\"list\">\n        <li class=\"item\" *ngFor=\"let vehicle of vehicles; let i = index\">\n            <p class=\"item__index\">{{i + 1}}</p>\n            <a class=\"item__link\" [href]=\"vehicle.vehicle\" [appVehicle]=\"vehicle.post.protocol\">Added from</a>\n            <p class=\"item__vehicle\">{{ vehicle | transformVehicle }}</p>\n            <p class=\"item__price\">{{vehicle.cost.amount | currency : vehicle.cost.currencyCode : 'code'}}</p>\n        </li>\n    </ul>\n</div>","import { VehicleDirective } from './vehicle.directive';\n\nexport const appDirectives = [\n    VehicleDirective,\n];\n\nexport * from './vehicle.directive';","import { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { Vehicle } from './models';\nimport { VehicleService } from './services';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n    title = 'vehicles';\n\n    public vehicles: Vehicle[] = [];\n    public isLoading = false;\n    constructor(private carService: VehicleService) { }\n\n    ngOnInit(): void {\n        this.carService.getVehicles()\n            .pipe(finalize(() => this.isLoading = true))\n            .subscribe((vehicles) => { this.vehicles = vehicles });\n    }\n\n}\n","<app-loader *ngIf=\"!isLoading\" class=\"loader\"></app-loader>\n<app-vehicles *ngIf=\"isLoading\" [vehicles]=\"vehicles\"></app-vehicles>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { VehicleComponent } from './components/vehicles/vehicles.component';\n\nimport { appDirectives } from './directives';\nimport { appServices } from './services';\nimport { appPipes } from './pipes';\nimport { LoaderComponent } from './components/loader/loader.component';\n\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        VehicleComponent,\n        ...appPipes,\n        ...appDirectives,\n        LoaderComponent,\n    ],\n    imports: [\n        BrowserModule\n    ],\n    providers: [\n        ...appServices,\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { Vehicle } from '../models';\n\n@Pipe({\n    name: 'transformVehicle'\n})\nexport class TransformVehiclePipe implements PipeTransform {\n\n    transform(vehicle: Vehicle): string {\n        return `${vehicle.manufacturer} - ${vehicle.model} (${vehicle.fuel})`;\n    }\n}\n","import { VehicleService } from './vehicle.service';\n\nexport const appServices = [\n    VehicleService,\n];\n\nexport * from './vehicle.service';","import { TransformVehiclePipe } from './transform-vehicle.pipe';\n\n\nexport const appPipes = [\n    TransformVehiclePipe,\n];\n\nexport * from './transform-vehicle.pipe';\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"loader\"></div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}