{"version":3,"sources":["./src/environments/environment.ts","./src/app/mocks/vechicles.mock.ts","./src/app/services/vehicle.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import * as faker from 'faker';\r\n\r\nfunction getFakeVehicle() {\r\n    return {\r\n      color: faker.vehicle.color(),\r\n      fuel: faker.vehicle.fuel(),\r\n      manufacturer: faker.vehicle.manufacturer(),\r\n      model: faker.vehicle.model(),\r\n      type: faker.vehicle.type(),\r\n      vehicle: faker.vehicle.vehicle(),\r\n      vin: faker.vehicle.vin(),\r\n\r\n      post: {\r\n        slug: faker.helpers.slugify(faker.name.title()),\r\n        protocol: faker.internet.protocol(),\r\n      },\r\n\r\n      cost: {\r\n        account: faker.finance.account(),\r\n        accountName: faker.finance.accountName(),\r\n        amount: faker.finance.amount(),\r\n        currencyCode: faker.finance.currencyCode(),\r\n      },\r\n    };\r\n  }\r\n\r\n  export const MOCK_VEHICLES = new Array(20).fill(0).map(() => getFakeVehicle())\r\n","import { delay } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { MOCK_VEHICLES } from '../mocks/vechicles.mock';\r\nimport { Vehicle } from '../models/vechicle';\r\n\r\n@Injectable()\r\nexport class VehicleService {\r\n    constructor() { }\r\n\r\n    getVehicles(): Observable<Vehicle[]> {\r\n        return of(MOCK_VEHICLES).pipe(\r\n            delay(3000)\r\n        )\r\n    }\r\n}","import { VehicleService } from './services'\r\nimport { Component } from '@angular/core';\r\nimport { Vehicle } from './models/vechicle';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  vehicles: Vehicle[] = [];\r\n  areVehicleLoading: boolean = false;\r\n\r\n  constructor(private vehicleService: VehicleService) {\r\n    this.setVehicleLoading(true);\r\n    this.getVehicles();\r\n  }\r\n\r\n  setVehicleLoading(isLoading: boolean): void {\r\n    this.areVehicleLoading = isLoading;\r\n  }\r\n\r\n  private getVehicles(): void {\r\n    this.vehicleService.getVehicles().subscribe((vehicles: Vehicle[]) => {\r\n      this.vehicles = vehicles;\r\n      this.setVehicleLoading(false);\r\n    })\r\n  }\r\n}\r\n","<section class=\"container\">\r\n  <div *ngIf=\"areVehicleLoading\">Loading...</div>\r\n\r\n  <table *ngIf=\"!areVehicleLoading\">\r\n    <tr>\r\n      <th>Added from</th>\r\n      <th>Vehicle</th>\r\n      <th>Price</th>\r\n    </tr>\r\n    <tr *ngFor=\"let vehicle of vehicles; index as i\">\r\n      <td [class.--color-red]=\"vehicle.post.protocol === 'http'\">\r\n        {{ vehicle.post.protocol }}\r\n      </td>\r\n      <td>\r\n        {{ vehicle.manufacturer }} - {{ vehicle.model }} {{ vehicle.fuel }}\r\n      </td>\r\n      <td>\r\n        {{\r\n          vehicle.cost.amount\r\n            | currency: vehicle.cost.currencyCode:\"symbol-narrow\"\r\n        }}\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</section>\r\n","import { appServices } from './services/index';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [\r\n    ...appServices\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { VehicleService } from './vehicle.service'\r\n\r\nexport const appServices = [\r\n    VehicleService\r\n]\r\n\r\nexport * from './vehicle.service'","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}