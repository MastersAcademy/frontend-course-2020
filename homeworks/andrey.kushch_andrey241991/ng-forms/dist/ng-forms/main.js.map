{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'ng-forms';\n  email: string = '';\n  password: string = '';\n  signInControl!: FormGroup;\n  private EMAIL_KEY: string = 'EMAIL_KEY';\n  private PASSWORD_KEY: string = 'PASSWORD_KEY';\n\n  ngOnInit() {\n    this.getFromLocalStorage()\n    this.signInControl = new FormGroup({\n      loginControl: new FormControl(this.email, [Validators.required, Validators.email, Validators.minLength(10)]),\n      passwordControl: new FormControl(this.password, [Validators.required, Validators.minLength(8)]),\n      rememberControl: new FormControl(false)\n    });\n  }\n\n  setOnLocalStorage(email: string, password: string): void {\n    localStorage.setItem(this.EMAIL_KEY, btoa(email))\n    localStorage.setItem(this.PASSWORD_KEY, btoa(password))\n  }\n\n  getFromLocalStorage(): void {\n    this.email = atob(localStorage.getItem(this.EMAIL_KEY) || '');\n    this.password = atob(localStorage.getItem(this.PASSWORD_KEY) || '');\n  }\n\n  onSubmit(): void {\n    const email = this.signInControl?.get('loginControl')?.value;\n    const password = this.signInControl?.get('passwordControl')?.value;\n    const rememberControl = this.signInControl?.get('rememberControl')?.value;\n    alert(`Email is ${email}, Password is ${password}`)\n    if (rememberControl) {\n      this.setOnLocalStorage(email, password)\n    }\n  }\n}\n","<section class=\"container\">\n  <div class=\"form-container\">\n    <h2>Sign In</h2>\n    <form class=\"form\" [formGroup]=\"signInControl\" (ngSubmit)=\"onSubmit()\">\n      <label class=\"input-wrapper\">\n        Email:\n        <input\n          class=\"input\"\n          placeholder=\"Email\"\n          type=\"email\"\n          formControlName=\"loginControl\"\n        />\n      </label>\n      <label class=\"input-wrapper\">\n        Password:\n        <input\n          class=\"input\"\n          placeholder=\"Password\"\n          type=\"password\"\n          formControlName=\"passwordControl\"\n        />\n      </label>\n      <label class=\"input-wrapper row\">\n        Remember Me:\n        <input\n          class=\"input checkbox-input\"\n          type=\"checkbox\"\n          formControlName=\"rememberControl\"\n        />\n      </label>\n      <button type=\"submit\" [disabled]=\"!signInControl.valid\">Submit</button>\n    </form>\n  </div>\n</section>\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}