(()=>{var e=document.querySelector("[data-score]"),t=document.querySelector("[data-cube]"),r=document.querySelector("[data-cube-score]"),n=document.querySelector("[data-key]"),s=document.querySelector("[data-progress-bar]"),i=document.querySelector("[data-game-start-btn]"),a=document.querySelector("[data-game-stop-btn]"),o=document.querySelector("[data-game-restart-btn]"),c=new(function(){function e(e,t,r,n,s){this.scoreElement=e,this.cubeScoreElement=t,this.keyElement=r,this.cubeElement=n,this.progressBarElement=s,this.score=100,this.interval=2e3,this.intervalId=null,this.intervalEventDelay=10,this.currentEventTime=0,this.wasRun=!1,this.subscribeOnKeyPress()}return e.prototype.start=function(){this.wasRun=!0,null==this.intervalId&&(this.startKeysInterval(),e.generateKey(),this.currentEventTime=0)},e.prototype.startKeysInterval=function(){this.intervalId=window.setInterval(e.intervalEvent,this.intervalEventDelay,this)},e.prototype.stopKeysInterval=function(){window.clearInterval(this.intervalId),this.intervalId=null},e.prototype.stopGame=function(){if(!this.wasRun)return this.start(),void(this.wasRun=!0);this.stopKeysInterval()},e.intervalEvent=function(t){t.currentEventTime+=t.intervalEventDelay,t.updateProgressBar(),t.currentEventTime>t.interval&&(t.addScore(e.generateNumber(-10,-15)),t.resetEvent())},e.prototype.updateProgressBar=function(){this.progressBarElement.style.width=String(100-this.currentEventTime/this.interval*100)+"%"},e.prototype.setScore=function(e){this.scoreElement.innerHTML=e.toString();var t=String(100+e/2)+"px";this.cubeElement.style.width=t,this.cubeElement.style.height=t,e>200&&(alert("victory"),this.restartGame()),e<0&&(alert("loss"),this.restartGame())},e.prototype.restartGame=function(){if(!this.wasRun)return this.start(),void(this.wasRun=!0);this.stopKeysInterval(),this.setScore(this.score),this.resetEvent(),this.cubeScoreElement.innerHTML=""},e.prototype.setKey=function(t){if(this.intervalId){if(t.toUpperCase()===n.innerHTML){var r=e.generateNumber(5,10);this.addScore(r)}else this.addScore(e.generateNumber(-20,-25));this.resetEvent()}},e.prototype.resetEvent=function(){this.currentEventTime=0,this.updateProgressBar(),e.generateKey()},e.prototype.addScore=function(e){var t=Number.parseInt(this.scoreElement.innerHTML);this.cubeScoreElement.innerHTML=e.toString(),this.setScore(t+e)},e.prototype.subscribeOnKeyPress=function(){var e=this;document.addEventListener("keypress",(function(t){e.setKey(t.key)}))},e.generateKey=function(){var t="A".charCodeAt(0),r="Z".charCodeAt(0),s=e.generateNumber(t,r);n.innerHTML=String.fromCharCode(s)},e.generateNumber=function(e,t){return Math.floor(Math.random()*Math.floor(t-e))+e},e}())(e,r,n,t,s);i.addEventListener("click",(function(){return c.start()})),a.addEventListener("click",(function(){return c.stopGame()})),o.addEventListener("click",(function(){return c.restartGame()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,