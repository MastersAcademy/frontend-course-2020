{"version":3,"sources":["./src/app/text-field/text-field.component.ts","./src/app/text-field/text-field.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/password-field/password-field.component.ts","./src/app/password-field/password-field.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, forwardRef, HostListener, Injector, Input, OnInit} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, NgControl } from \"@angular/forms\";\n\ntype EmitTextChange = (value: string) => void;\ntype MarkAsTouched = () => void;\n\n@Component({\n  selector: 'app-text-field',\n  templateUrl: './text-field.component.html',\n  styleUrls: ['./text-field.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextFieldComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextFieldComponent implements OnInit, ControlValueAccessor {\n  public currentFieldControl = new FormControl('');\n\n  @Input() public isVisiblePassword: boolean;\n  @Input() public nameOfField: string;\n\n  public emitTextChange!: EmitTextChange;\n  public markAsTouched!: MarkAsTouched;\n\n  public ngControl: NgControl;\n\n  public getTypeOfField(name: string | number): string {\n    let result: string;\n    if (this.isVisiblePassword === undefined) {\n      result = (name === 'password') ? 'password' : 'text';\n    } else {\n      result = (this.isVisiblePassword) ? 'text' : 'password';\n    }\n    return result;\n  }\n\n  public writeValue(text: string) {\n    this.currentFieldControl.setValue(text);\n  }\n\n  public get isTouched(): boolean {\n    return this.ngControl.control.touched;\n  }\n\n  public get errorMessage() {\n    const errors = this.ngControl.control.errors;\n    if (errors === null) return '';\n    if (errors.email) return 'Wrong format of Email address!';\n    if (errors.required) return 'Field is empty!';\n  }\n\n  public registerOnChange(emitTextChange: EmitTextChange):void {\n    this.emitTextChange = emitTextChange;\n  }\n\n  public registerOnTouched(onFieldFocusOut: MarkAsTouched) {\n    this.markAsTouched = onFieldFocusOut;\n  }\n\n  @HostListener('click')\n  private onFieldFocusOut() {\n    this.markAsTouched();\n  }\n\n  constructor(private inj: Injector) {}\n\n  public ngOnInit(): void {\n    this.currentFieldControl.valueChanges.subscribe((text: string) => this.emitTextChange?.(text));\n    this.ngControl = this.inj.get(NgControl);\n  }\n}\n","<label for=\"{{ nameOfField }}\">{{ nameOfField | titlecase }}</label>\n<div class=\"text-field-wrapper\">\n  <input [formControl]=\"currentFieldControl\"\n         id=\"{{ nameOfField }}\"\n         type=\"{{ getTypeOfField(nameOfField) }}\"\n         placeholder=\"Enter {{ nameOfField | titlecase }}\">\n  <ng-content></ng-content>\n</div>\n<span class=\"error-message\" *ngIf=\"isTouched\">{{ errorMessage }}</span>\n<span class=\"error-message\" *ngIf=\"!isTouched\"></span>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public readonly loginForm: FormGroup = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n    remember: new FormControl(false),\n  });\n\n  public email: string;\n  public password: string;\n  public remember: boolean;\n\n  public updateState() {\n    this.email = this.loginForm.controls.email.value;\n    this.password = this.loginForm.controls.password.value;\n    this.remember = this.loginForm.controls.remember.value;\n  }\n\n  public showMessage() {\n    const resultMessage: string = `\n    Email: ${this.email}\n    Password: ${this.password}`;\n    alert(resultMessage);\n  }\n\n  public saveLoginData() {\n    const email = window.btoa(this.email);\n    const password = window.btoa(this.password);\n\n    localStorage.setItem('email', email);\n    localStorage.setItem('password', password);\n  }\n\n  public deleteLoginData() {\n    localStorage.clear();\n  }\n\n  public checkLocalStorage(): boolean {\n    return localStorage.getItem('email') !== null &&\n           localStorage.getItem('password') !== null;\n  }\n\n  public updateFormLS() {\n    if (this.checkLocalStorage()) {\n      const email = window.atob(localStorage.getItem('email'));\n      const password = window.atob(localStorage.getItem('password'));\n\n      this.loginForm.controls.email.setValue(email);\n      this.loginForm.controls.password.setValue(password);\n    }\n  }\n\n  public submit(event: Event) {\n    event.preventDefault();\n    if (this.loginForm.invalid) return false;\n\n    this.updateState();\n\n    if (this.remember) { this.saveLoginData() }\n    else { this.deleteLoginData() }\n\n    this.showMessage();\n    this.loginForm.reset();\n  }\n\n  ngOnInit() {\n    this.updateFormLS();\n  }\n}\n","<form [formGroup]=\"loginForm\">\n    <app-text-field [nameOfField]=\"'email'\" formControlName=\"email\"></app-text-field>\n    <app-password-field formControlName=\"password\"></app-password-field>\n\n    <label for=\"remember\">Remember me</label>\n    <input formControlName=\"remember\" id=\"remember\" type=\"checkbox\" name=\"remember\">\n\n    <button [class.disabled]=\"loginForm.invalid\" type=\"submit\" (click)=\"submit($event)\">Login</button>\n</form>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { TextFieldComponent } from './text-field/text-field.component';\nimport { PasswordFieldComponent } from './password-field/password-field.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TextFieldComponent,\n    PasswordFieldComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, forwardRef, HostListener, Injector, OnInit} from '@angular/core';\nimport { FormControl, NG_VALUE_ACCESSOR, NgControl } from \"@angular/forms\";\n\ntype EmitTextChange = (value: string) => void;\ntype MarkAsTouched = () => void;\n\n@Component({\n  selector: 'app-password-field',\n  templateUrl: './password-field.component.html',\n  styleUrls: ['./password-field.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => PasswordFieldComponent),\n      multi: true\n    }\n  ]\n})\nexport class PasswordFieldComponent implements OnInit {\n  public currentFieldControl = new FormControl('');\n  public emitTextChange!: EmitTextChange;\n  public ngControl: NgControl;\n  public markAsTouched!: MarkAsTouched;\n  public isVisiblePassword: boolean = false;\n\n  public toggleVisibility() {\n    this.isVisiblePassword = (!this.isVisiblePassword);\n  }\n\n  public writeValue(text: string) {\n    this.currentFieldControl.setValue(text);\n  }\n\n  public registerOnChange(emitTextChange: EmitTextChange):void {\n    this.emitTextChange = emitTextChange;\n  }\n\n  public registerOnTouched(onFieldFocusOut: MarkAsTouched) {\n    this.markAsTouched = onFieldFocusOut;\n  }\n\n  @HostListener('click')\n  private onFieldFocusOut() {\n    this.markAsTouched();\n  }\n\n  constructor(private inj: Injector) {}\n\n  public ngOnInit(): void {\n    this.currentFieldControl.valueChanges.subscribe((text: string) => this.emitTextChange?.(text));\n    this.ngControl = this.inj.get(NgControl);\n  }\n}\n","<app-text-field [nameOfField]=\"'password'\" [isVisiblePassword]=\"isVisiblePassword\" [formControl]=\"ngControl.control\">\n  <button class=\"toggle-visibility-btn\" (click)=\"toggleVisibility()\">\n    <svg *ngIf=\"isVisiblePassword\" xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"0 0 24 24\"><path d=\"M10.94,6.08A6.93,6.93,0,0,1,12,6c3.18,0,6.17,2.29,7.91,6a15.23,15.23,0,0,1-.9,1.64,1,1,0,0,0-.16.55,1,1,0,0,0,1.86.5,15.77,15.77,0,0,0,1.21-2.3,1,1,0,0,0,0-.79C19.9,6.91,16.1,4,12,4a7.77,7.77,0,0,0-1.4.12,1,1,0,1,0,.34,2ZM3.71,2.29A1,1,0,0,0,2.29,3.71L5.39,6.8a14.62,14.62,0,0,0-3.31,4.8,1,1,0,0,0,0,.8C4.1,17.09,7.9,20,12,20a9.26,9.26,0,0,0,5.05-1.54l3.24,3.25a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42Zm6.36,9.19,2.45,2.45A1.81,1.81,0,0,1,12,14a2,2,0,0,1-2-2A1.81,1.81,0,0,1,10.07,11.48ZM12,18c-3.18,0-6.17-2.29-7.9-6A12.09,12.09,0,0,1,6.8,8.21L8.57,10A4,4,0,0,0,14,15.43L15.59,17A7.24,7.24,0,0,1,12,18Z\"/></svg>\n    <svg *ngIf=\"!isVisiblePassword\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M21.92,11.6C19.9,6.91,16.1,4,12,4S4.1,6.91,2.08,11.6a1,1,0,0,0,0,.8C4.1,17.09,7.9,20,12,20s7.9-2.91,9.92-7.6A1,1,0,0,0,21.92,11.6ZM12,18c-3.17,0-6.17-2.29-7.9-6C5.83,8.29,8.83,6,12,6s6.17,2.29,7.9,6C18.17,15.71,15.17,18,12,18ZM12,8a4,4,0,1,0,4,4A4,4,0,0,0,12,8Zm0,6a2,2,0,1,1,2-2A2,2,0,0,1,12,14Z\"/></svg>\n  </button>\n</app-text-field>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}