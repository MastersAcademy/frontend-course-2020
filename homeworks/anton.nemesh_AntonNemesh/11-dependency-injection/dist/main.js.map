{"version":3,"sources":["./src/vechicles.mock.ts","./src/environments/environment.ts","./src/app/services/vehicle.service.ts","./src/app/directives/index.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/directives/clickable-links.directive.ts","./src/app/app.module.ts","./src/app/pipes/transformVehicleModelPipe.ts","./src/app/services/index.ts","./src/app/pipes/index.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import * as faker from 'faker';\nimport {IVehicle} from \"./vechicle.model\";\n\n\nconst count = 20;\nlet seed = 1222;\n\n// tslint:disable-next-line:typedef\nfunction getFakeVehicle() {\n  seed += 1;\n  faker.seed(seed);\n\n  return {\n    color: faker.vehicle.color(),\n    fuel: faker.vehicle.fuel(),\n    manufacturer: faker.vehicle.manufacturer(),\n    model: faker.vehicle.model(),\n    type: faker.vehicle.type(),\n    vehicle: faker.vehicle.vehicle(),\n    vin: faker.vehicle.vin(),\n\n    post: {\n      slug: faker.helpers.slugify(faker.name.title()),\n      protocol: faker.internet.protocol(),\n    },\n\n    cost: {\n      account: faker.finance.account(),\n      accountName: faker.finance.accountName(),\n      amount: faker.finance.amount(),\n      currencyCode: faker.finance.currencyCode(),\n    },\n  };\n}\n\nexport const MOCK_VEHICLES: IVehicle[] = new Array(count).fill(0).map(getFakeVehicle);\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from \"rxjs\";\nimport { delay } from \"rxjs/operators\";\nimport { IVehicle } from \"../../vechicle.model\";\nimport { MOCK_VEHICLES } from '../../vechicles.mock';\n\n@Injectable()\nexport class VehicleService {\n  constructor() {}\n  getVehicles(): Observable<IVehicle[]> {\n    return of(MOCK_VEHICLES).pipe(\n      delay( 2000 )\n    );\n  }\n}\n","import {ClickableLinksDirective} from \"./clickable-links.directive\";\n\nexport const appDirectives = [\n  ClickableLinksDirective,\n];\n\nexport * from './clickable-links.directive';\n","import { Component, OnInit } from '@angular/core';\nimport { VehicleService } from \"./services\";\nimport { finalize } from \"rxjs/operators\";\nimport { IVehicle } from \"../vechicle.model\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  public vehicles: IVehicle[] = [];\n  public areLoading: boolean = true;\n\n  constructor(private vehicleService: VehicleService) {}\n\n  private getVehicles(): void {\n    this.vehicleService.getVehicles()\n      .pipe(\n        finalize(() => this.areLoading = false)\n      )\n      .subscribe((vehicles: IVehicle[]) => {\n      this.vehicles = vehicles;\n    })\n  }\n\n  ngOnInit() { this.getVehicles(); }\n}\n","<h1 class=\"pre-loader\" *ngIf=\"areLoading\">Loading...</h1>\n<table class=\"table\" *ngIf=\"!areLoading\">\n  <tbody class=\"table__body\">\n    <tr class=\"table__row\">\n      <th class=\"table__col\">Added from</th>\n      <th class=\"table__col\">Vehicle</th>\n      <th class=\"table__col\">Price</th>\n    </tr>\n    <tr class=\"table__row\" *ngFor=\"let vehicle of vehicles\" appClickableLinks>\n      <td class=\"table__col\">{{vehicle.post.protocol}}<a class=\"table__link\" href=\"\"></a></td>\n      <td class=\"table__col\">{{ vehicle | transformVehicleModel }}<a tabindex=\"-1\" class=\"table__link\" href=\"\"></a></td>\n      <td class=\"table__col\">{{ vehicle.cost.amount | currency: vehicle.cost.currencyCode : 'symbol-narrow' }}<a tabindex=\"-1\" class=\"table__link\" href=\"\"></a></td>\n    </tr>\n  </tbody>\n</table>\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({selector: '[appClickableLinks]'})\nexport class ClickableLinksDirective implements AfterViewInit {\n  currentRow: any;\n  currentModel: string = '';\n\n  constructor(private el: ElementRef) {}\n\n  encodeGoogleURL(string: string): string {\n    return `https://www.google.com/search?q=${string.split(' ').join('+')}`;\n  }\n\n  ngAfterViewInit(): void {\n    this.currentRow = this.el.nativeElement as HTMLTableRowElement;\n    this.currentModel = this.currentRow.children[1].innerText;\n\n    if (this.currentRow.children[0].innerText === 'http') {\n      this.currentRow.children[0].classList.add('red-text');\n      [...this.currentRow.children].forEach((el: HTMLTableRowElement) => {\n        el.children[0].classList.add('unclickable');\n      });\n    } else {\n      [...this.currentRow.children].forEach((el: any) => {\n        el.children[0].href = this.encodeGoogleURL(this.currentModel);\n      });\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {appServices} from \"./services\";\nimport {appDirectives} from \"./directives\";\nimport {appPipes} from \"./pipes\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ...appDirectives,\n    ...appPipes,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    ...appServices,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { IVehicle } from \"../../vechicle.model\";\n\n@Pipe({\n  name: 'transformVehicleModel'\n})\n\nexport class TransformVehicleModelPipe implements PipeTransform {\n  transform(value: IVehicle): string {\n    return `${ value.manufacturer } - ${ value.model } (${ value.fuel })`;\n  }\n}\n","import {VehicleService} from \"./vehicle.service\";\n\n\nexport const appServices = [\n  VehicleService,\n];\n\nexport * from './vehicle.service';\n","import {TransformVehicleModelPipe} from \"./transformVehicleModelPipe\";\n\nexport const appPipes = [\n  TransformVehicleModelPipe,\n]\n\nexport * from \"./transformVehicleModelPipe\";\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}