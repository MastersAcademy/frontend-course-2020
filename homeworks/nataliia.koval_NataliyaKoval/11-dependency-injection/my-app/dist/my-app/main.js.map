{"version":3,"sources":["./src/environments/environment.ts","./src/app/directives/highlight.directive.ts","./src/app/services/vehicle.service.ts","./src/app/mocks/vehicles.mock.ts","./src/app/pipes/vehicle.pipe.ts","./src/app/directives/index.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/index.ts","./src/app/pipes/index.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AfterViewInit, Directive, ElementRef } from \"@angular/core\";\n\n@Directive({\n    selector: '[appHighlight]'\n})\n\nexport class HighlightDirective implements AfterViewInit {\n    constructor(private el: ElementRef) {}\n        \n    ngAfterViewInit(): void {\n        if (this.el.nativeElement.lastChild.textContent === 'http') {\n            this.el.nativeElement.firstChild.style.backgroundColor = 'red';\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { Vehicle } from '../interfaces/vehicle.interface';\nimport { MOCK_VEHICLES } from '../mocks/vehicles.mock';\n\n@Injectable()\n\nexport class VehicleService {\n    constructor(){}\n\n    getVehicle(): Observable<Vehicle[]> {\n        return of(MOCK_VEHICLES).pipe(delay(2000));\n\n    }\n}","import * as faker from 'faker';\n\nconst count = 20;\nlet seed = 1222;\n\n// tslint:disable-next-line:typedef\nfunction getFakeVehicle() {\n  seed += 1;\n  faker.seed(seed);\n\n  return {\n    color: faker.vehicle.color(),\n    fuel: faker.vehicle.fuel(),\n    manufacturer: faker.vehicle.manufacturer(),\n    model: faker.vehicle.model(),\n    type: faker.vehicle.type(),\n    vehicle: faker.vehicle.vehicle(),\n    vin: faker.vehicle.vin(),\n\n    post: {\n      slug: faker.helpers.slugify(faker.name.title()),\n      protocol: faker.internet.protocol(),\n    },\n\n    cost: {\n      account: faker.finance.account(),\n      accountName: faker.finance.accountName(),\n      amount: faker.finance.amount(),\n      currencyCode: faker.finance.currencyCode(),\n    },\n  };\n}\n\nexport const MOCK_VEHICLES = new Array(count).fill(0).map(getFakeVehicle);","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { Vehicle } from \"../interfaces/vehicle.interface\";\n\n@Pipe({\n    name: \"vehiclePipe\"\n})\n\nexport class VehiclePipe implements PipeTransform {\n    transform(vehicle: Vehicle): string {\n       return `${vehicle.manufacturer} - ${vehicle.model} (${vehicle.fuel})`\n    }\n\n}","import { HighlightDirective } from './highlight.directive';\n\nexport const appDirectives = [\n    HighlightDirective,\n];\n\nexport * from './highlight.directive';","import { Component, OnInit } from '@angular/core';\nimport { VehicleService } from './services';\n\nimport { Vehicle } from './interfaces/vehicle.interface';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  vehicles: Vehicle[] = [];\n  areVehicleLoading: boolean = false;\n\n  constructor(private vehicleService: VehicleService) {\n  }\n  \n  ngOnInit(): void {\n    this.getVehicles();\n  }\n  \n  private getVehicles(): void {\n    this.areVehicleLoading = true;\n    \n    this.vehicleService.getVehicle()\n      .pipe(finalize(() => this.areVehicleLoading = false))\n      .subscribe((vehicles: Vehicle[]) => {\n      \n      this.vehicles = vehicles;\n    });\n  }\n}\n","<div class=\"wrapper\">\n    <div class=\"spinner\">\n        <mat-progress-spinner *ngIf=\"areVehicleLoading\" mode=\"indeterminate\"></mat-progress-spinner>\n    </div>\n    <ul>\n        <li class=\"vehicle\" *ngFor=\"let vehicle of vehicles\">\n            <p appHighlight><span>Added from: </span><span>{{ vehicle.post.protocol }}</span></p>\n            <p>Vehicle:\t{{ vehicle | vehiclePipe}}</p>\n            <p>Price: {{ vehicle.cost.amount | currency: vehicle.cost.currencyCode }}</p>\n        </li>    \n    </ul>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { appServices } from './services';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { appPipes } from './pipes';\nimport { appDirectives } from './directives';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ...appPipes,\n    ...appDirectives\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatProgressSpinnerModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    ...appServices,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { VehicleService } from './vehicle.service';\n\nexport const appServices = [\n    VehicleService,\n];\n\nexport * from './vehicle.service';","import { VehiclePipe } from './vehicle.pipe';\n\nexport const appPipes = [\n    VehiclePipe,\n];\n\nexport * from './vehicle.pipe';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}