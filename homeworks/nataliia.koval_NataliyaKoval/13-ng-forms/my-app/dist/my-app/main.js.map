{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;ICO1D,wEAAsC;IAAA,sFAA2B;IAAA,4DAAQ;;;IACzE,wEAAmC;IAAA,+EAAoB;IAAA,4DAAQ;;;IAFjE,0EACE;IAAA,mHAAyE;IACzE,mHAA+D;IACjE,4DAAM;;;IAFI,0DAA4B;IAA5B,mIAA4B;IAC5B,0DAAyB;IAAzB,gIAAyB;;;IASjC,wEAAyC;IAAA,sFAA2B;IAAA,4DAAQ;;;IAC5E,wEAA0C;IAAA,sGAA2C;IAAA,4DAAQ;;;IAF/F,0EACE;IAAA,oHAA4E;IAC5E,oHAA6F;IAC/F,4DAAM;;;IAFI,0DAA+B;IAA/B,yIAA+B;IAC/B,0DAAgC;IAAhC,0IAAgC;;ADX3C,MAAM,YAAY;IAIvB,QAAQ;QAEN,IAAI,CAAC,IAAI,GAAG,IAAI,wDAAS,CAAE;YACzB,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnE,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC/E,UAAU,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;SACnC,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAE,CAAC;IACjC,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC;IACpC,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAE,CAAC;IACtC,CAAC;IAED,iBAAiB;QACf,IAAI,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YACtC,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACrC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACjB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,UAAU,EAAE,IAAI;aACjB,CAAC;SACH;IACH,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACnB,KAAK,CAAC,cAAc,IAAI,CAAC,KAAK,CAAC,KAAK,eAAe,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;YAE1E,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;gBACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC3B;iBAAM;gBACL,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;aACvC;SACF;IACH,CAAC;IAED,gBAAgB;QACd,MAAM,iBAAiB,GAAW,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC/E,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAED,kBAAkB;QAChB,MAAM,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAClD,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,iBAAiB,CAAC,CAAC;IACxD,CAAC;IAED,gBAAgB;QACd,MAAM,iBAAiB,GAAW,IAAI,CAAS,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACnF,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACjD,OAAO,UAAU,CAAC;IACpB,CAAC;;wEAjEU,YAAY;4FAAZ,YAAY;QCRzB,0EACE;QAAA,yEACE;QAAA,0EACE;QADuB,wIAAY,YAAQ,IAAC;QAC5C,yEACE;QAAA,2EAA0B;QAAA,gEAAK;QAAA,4DAAQ;QACvC,sEAEA;QAAA,wGAGM;QACR,4DAAM;QAEN,yEACE;QAAA,2EAA6B;QAAA,oEAAQ;QAAA,4DAAQ;QAC7C,uEAEA;QAAA,0GAGM;QACR,4DAAM;QAEN,0EACE;QAAA,uEACA;QAAA,wEAAM;QAAA,uEAAW;QAAA,4DAAO;QAC1B,4DAAM;QAEN,6EAAuE;QAAA,kEAAM;QAAA,4DAAS;QACxF,4DAAO;QACT,4DAAM;QACR,4DAAU;;QA7BA,0DAAkB;QAAlB,+EAAkB;QAKY,0DAAoC;QAApC,wGAAoC;QAUpC,0DAA0C;QAA1C,8GAA0C;QAW/B,0DAAyB;QAAzB,sFAAyB;;6FDpB/D,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACmB;;AAe3D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,kEAAmB;SACpB;mIAIU,SAAS,mBAXlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,kEAAmB;6FAKV,SAAS;cAbrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;iBACpB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  \n  form!: FormGroup;\n  \n  ngOnInit() {\n\n    this.form = new FormGroup ({\n      email: new FormControl('', [Validators.email, Validators.required]),\n      password: new FormControl(null, [Validators.minLength(6), Validators.required]),\n      rememberMe: new FormControl(false)\n    });\n\n    this.checkLocalStorage();\n  }\n\n  get email() { \n    return this.form.get('email')!; \n  }\n\n  get password() {\n    return this.form.get('password')!; \n  }\n\n  get rememberMe() { \n    return this.form.get('rememberMe')!; \n  }\n\n  checkLocalStorage() {\n    if (localStorage.getItem('inputsData')) {\n      const data = this.decodeInputsData();\n      this.form.setValue({\n        email: data.email,\n        password: data.password,\n        rememberMe: true\n      })    \n    }\n  }\n\n  submit(): void {\n    if (this.form.valid) {\n      alert(`You email: ${this.email.value}, password: ${this.password.value}`);\n      \n      if (this.rememberMe.value) {\n        this.encodeInputsData();\n        this.saveToLocalStorage();\n      } else {\n        localStorage.removeItem('inputsData');\n      }\n    }\n  }\n\n  encodeInputsData() {\n    const encodedInputsData: string = window.btoa(JSON.stringify(this.form.value));\n    return encodedInputsData;\n  }\n\n  saveToLocalStorage(): void {\n    const encodedInputsData = this.encodeInputsData();\n    localStorage.setItem('inputsData', encodedInputsData);\n  }\n\n  decodeInputsData() {\n    const decodedInputsData: string = atob(<string>localStorage.getItem('inputsData'));\n    const inputsData = JSON.parse(decodedInputsData);\n    return inputsData;\n  }\n}\n","<section>\n  <div class=\"form__container\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n      <div class=\"form__input\">\n        <label for=\"input__email\">Email</label>\n        <input class=\"input__item\" id=\"input__email\" type=\"text\" name=\"email\" placeholder=\"Email\" formControlName=\"email\">\n        \n        <div class=\"input__validation\" *ngIf=\"email.invalid && email.touched\">\n          <small *ngIf=\"email.errors?.required\">This field mustn't be empty</small>\n          <small *ngIf=\"email.errors?.email\">Enter the real email</small>\n        </div>\n      </div>\n            \n      <div class=\"form__input\">\n        <label for=\"input__password\">Password</label>\n        <input class=\"input__item\" id=\"input__password\" type=\"password\" name=\"password\" placeholder=\"Password\" formControlName=\"password\">\n\n        <div class=\"input__validation\" *ngIf=\"password.invalid && password.touched\">\n          <small *ngIf=\"password.errors?.required\">This field mustn't be empty</small>\n          <small *ngIf=\"password.errors?.minlength\">Password must be at least 6 characters long</small>\n        </div>\n      </div>\n      \n      <div class=\"form__input\">\n        <input type=\"checkbox\" formControlName=\"rememberMe\"> \n        <span>Remember me</span>\n      </div>\n      \n      <button class=\"button__submit\" type=\"submit\" [disabled]='form.invalid'>Submit</button>\n    </form>\n  </div>\n</section>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}