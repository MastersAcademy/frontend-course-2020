{"version":3,"sources":["./src/app/services/loader.service.ts","./src/app/services/users.service.ts","./src/environments/environment.ts","./src/app/interceptors/header-language.interceptor.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/interceptors/loader.interceptor.ts","./src/app/services/index.ts","./src/app/components/loader/loader.component.ts","./src/app/components/loader/loader.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\n\nexport class LoaderService {\n    isLoading = new Subject<boolean>();\n    show() {\n        this.isLoading.next(true);\n    }\n    hide() {\n        this.isLoading.next(false);\n    }\n}","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { Info } from '../interfaces/info.interface';\n\n@Injectable()\n\nexport class UsersService {\n    \n    ROOT_URL = 'https://reqres.in/api/users';\n\n    constructor(private http: HttpClient){}\n\n    getInfo(options: any): Observable<any> {\n       return this.http.get<Info>(this.ROOT_URL, options); \n    }  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport class HeaderLanguageInterceptor implements HttpInterceptor {\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n       \n        const cloned = req.clone({\n            headers: req.headers.append('accept-language', 'uk-UA,uk;q=0.9,ru;q=0.8,en-US;q=0.7,en;ja;q=0.6')\n        });\n       \n        return next.handle(cloned);\n    }\n}","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport class AuthInterceptor implements HttpInterceptor {\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n       \n        const cloned = req.clone({\n            headers: req.headers.append('Auth', 'SOME RANDOM TOKEN')\n        });\n       \n        return next.handle(cloned);\n    }\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { UsersService } from './services/users.service';\n\nimport { Info } from './interfaces/info.interface';\nimport { User } from './interfaces/user.interface';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit, OnDestroy {\n  info?: Info;\n  users: User[] = [];\n  total: number = 0;\n  page: number = 1;\n  pageSize: number = 2;\n  areCardsLoaded: boolean = false;\n  private subscription: Subscription = new Subscription();   \n  constructor(private usersService: UsersService){}\n\n  ngOnInit() {\n    this.getInfo()\n  }\n  \n  getRequestParams(page: number, pageSize: number) {\n    let options = {\n      params: {\n        page: 0,\n        per_page: 0\n      },\n    }\n\n    if (page) {\n      options.params.page = page;\n    }\n\n    if (pageSize) {\n      options.params.per_page = pageSize;\n    }\n    \n    return options;\n  }\n\n  getInfo() {\n    let options = this.getRequestParams (this.page, this.pageSize);\n\n    this.subscription.add(this.usersService.getInfo(options)\n      .subscribe(info => {\n        this.total = info.total;\n        this.users = info.data;\n      }));\n  }\n  \n  pageChanged(event: any) {\n    this.page = event;\n    this.getInfo();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<app-loader></app-loader>\n\n<section>\n    <div class=\"container\">\n        <div class=\"cards\">\n            <div class=\"cards_item\" *ngFor=\"let user of users | paginate: {itemsPerPage: 2, currentPage: page, totalItems: total}\">\n                <img class=\"avatar\" src=\"{{user.avatar}}\" alt=\"\">\n                <p><b>First name:</b> {{user.first_name}}</p>\n                <p><b>Last name:</b> {{user.last_name}}</p>\n                <p><b>Email:</b> {{user.email}}</p>\n            </div>\n        </div>\n        \n        <div class=\"pagination\">\n            <pagination-controls (pageChange)=\"pageChanged($event)\"></pagination-controls>\n        </div>\n        \n    </div>\n</section>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Provider } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport {NgxPaginationModule} from 'ngx-pagination';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { LoaderInterceptor } from './interceptors/loader.interceptor';\nimport { HeaderLanguageInterceptor } from './interceptors/header-language.interceptor';\nimport { appServices } from './services';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NgxPaginationModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [\n    ...appServices,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},\n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: HeaderLanguageInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { finalize } from \"rxjs/operators\";\nimport { LoaderService } from '../services/loader.service';\n\n@Injectable()\n\nexport class LoaderInterceptor implements HttpInterceptor {\n    \n    constructor(public loaderService: LoaderService) { }\n    \n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        this.loaderService.show();\n        return next.handle(req).pipe(\n            finalize(() => this.loaderService.hide())\n        );\n    }\n}\n","import { LoaderService } from './loader.service';\nimport { UsersService } from './users.service';\n\nexport const appServices = [\n    LoaderService,\n    UsersService,\n]\n\nexport * from './loader.service';\nexport * from './users.service';","import { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LoaderService } from '../../services/loader.service';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.css']\n})\nexport class LoaderComponent {\n  \n  isLoading: Subject<boolean> = this.loaderService.isLoading;\n  \n  constructor(private loaderService: LoaderService){}\n}\n","<div *ngIf=\"isLoading | async\" class=\"overlay\">\n    <mat-progress-spinner class=\"spinner\" mode=\"indeterminate\">\n    </mat-progress-spinner>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}