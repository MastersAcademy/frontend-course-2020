{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/login-form/login-form.component.ts","./src/app/components/login-form/login-form.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms';\n\nimport {User} from \"../../models/user.model\";\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.css']\n})\nexport class LoginFormComponent implements OnInit {\n\n  ngOnInit() {\n    this.checkStorage();\n  }\n\n  loginForm = new FormGroup({\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.minLength(8)\n    ]),\n    checkbox: new FormControl(),\n  });\n\n\n  onSubmit(): void {\n    const info: string = `Email - ${this.loginForm.value.email}, Password - ${this.loginForm.value.password}`\n    if (this.loginForm.value.checkbox) {\n      const encode: string = btoa(JSON.stringify(this.loginForm.value));\n      localStorage.setItem('user', encode);\n    } else {\n      localStorage.removeItem('user');\n    }\n    this.loginForm.reset();\n    alert(info)\n  }\n\n  checkStorage(): void {\n    if (localStorage.getItem('user')) {\n      const coding: string = atob(<string>localStorage.getItem('user'));\n      const user: User = JSON.parse(coding);\n      this.loginForm.setValue({\n        email: user.email,\n        password: user.password,\n        checkbox: user.checkbox,\n      });\n    }\n  }\n}\n","<section class=\"form-section\">\n  <form class=\"user-login_form\"\n        [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"user-input\">\n      <label class=\"label-form\">\n        Email:\n        <input type=\"email\" formControlName=\"email\" required id=\"email\">\n      </label>\n      <div class=\"error\"\n           *ngIf=\"loginForm.controls['email'].invalid && loginForm.controls['email'].touched\"\n      >\n        Incorrect email\n      </div>\n    </div>\n\n    <div class=\"user-input\">\n      <label class=\"label-form\">\n        Password:\n        <input type=\"password\" formControlName=\"password\" required>\n      </label>\n      <div class=\"error\"\n           *ngIf=\"loginForm.controls['password'].invalid && loginForm.controls['password'].touched\"\n      >\n        Minimum length password must be of 8 characters\n      </div>\n    </div>\n    <label>\n      <input class=\"user-checkbox\"\n             type=\"checkbox\"\n             formControlName=\"checkbox\"\n             value=\"check\">\n      Remember me\n    </label>\n    <button class=\"user-submit_btn\"\n            type=\"submit\"\n            [disabled]=\"!loginForm.valid\">Submit</button>\n  </form>\n</section>\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n}\n","<app-login-form></app-login-form>\n<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {AppRoutingModule} from './app-routing.module';\nimport {LoginFormComponent} from './components/login-form/login-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}