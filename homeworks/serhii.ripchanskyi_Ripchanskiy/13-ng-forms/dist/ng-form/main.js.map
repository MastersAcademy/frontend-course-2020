{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/login-form/login-form.component.ts","./src/app/components/login-form/login-form.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms';\n\nimport { User } from \"../../models\";\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent implements OnInit {\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  form = new FormGroup({\n    email: new FormControl('', [\n      Validators.required,\n      Validators.email\n    ]),\n    password: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n    ]),\n    rememberMe: new FormControl(),\n  });\n\n  onSubmit(): void {\n    this.form.value.rememberMe ? this.rememberUser() : this.forgetUser();\n    this.showFormData();\n  }\n\n  showFormData = (): void => alert(`Email: ${this.form.value.email} \\nPassword: ${this.form.value.password}`);\n\n  rememberUser = (): void => localStorage.setItem('user', this.encode(JSON.stringify(this.form.value)));\n\n  forgetUser = (): void => localStorage.removeItem('user');\n\n  getUser(): void {\n    const existingUser = localStorage.getItem('user');\n    if (existingUser) {\n      const user = JSON.parse(this.decode(existingUser));\n      this.setForm(user)\n    }\n  }\n\n  setForm(user: User): void {\n    this.form.setValue({\n      email: user.email,\n      password: user.password,\n      rememberMe: user.rememberMe,\n    });\n  }\n\n  encode = (value: string): string => btoa(value);\n\n  decode = (value: string): string => atob(value);\n}\n","<form class=\"login-form\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <label class=\"login-form__label\">\n      Email:\n      <input class=\"login-form__input\" type=\"email\" formControlName=\"email\" required>\n    </label>\n    <div class=\"error\" *ngIf=\"form.controls['email'].invalid && form.controls['email'].touched\">\n      <span *ngIf=\"form.get(['email']).hasError('required')\">\n        Email is <strong>required</strong>\n      </span>\n      <span *ngIf=\"form.get(['email']).hasError('email')\">\n        Email is not <strong>valid</strong>\n      </span>\n    </div>\n\n    <label class=\"login-form__label\">\n      Password:\n      <input class=\"login-form__input\" type=\"password\" formControlName=\"password\" required>\n    </label>\n    <div class=\"error\" *ngIf=\"form.controls['password'].invalid && form.controls['password'].touched\">\n      <span *ngIf=\"form.get(['password']).hasError('required')\">\n        Password is <strong>required</strong>\n      </span>\n      <span *ngIf=\"form.get(['password']).hasError('minlength')\">\n        Password must be at least 8 characters\n      </span>\n    </div>\n  <br>\n  <label>\n    <input class=\"login-form__input\" type=\"checkbox\" formControlName=\"rememberMe\" value=\"check\">\n    Remember me\n  </label>\n  <br>\n  <button class=\"btn\" type=\"submit\" [disabled]=\"!form.valid\">Submit</button>\n</form>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n","<app-login-form></app-login-form>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { LoginFormComponent } from './components/login-form/login-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}