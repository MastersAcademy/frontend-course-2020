{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/validator.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAA2C;;AAMpC,MAAM,gBAAgB;IAC3B,gBAAgB,CAAC;IAEjB,cAAc,CAAC,OAAwB;QACrC,MAAM,OAAO,GAAG,uJAAuJ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC5L,IAAI,OAAO;YAAE,OAAO,IAAI,CAAC;QACzB,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;IAC/B,CAAC;IAED,iBAAiB,CAAC,OAAwB;QACxC,MAAM,OAAO,GAAG,wCAAwC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7E,IAAI,OAAO;YAAE,OAAO,IAAI,CAAC;QACzB,OAAO,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;IAC/B,CAAC;;gFAbU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;6FAEP,gBAAgB;cAH5B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAC0B;;;;;;;AAS7D,MAAM,YAAY;IAQvB,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAN/C,iBAAY,GAAW,UAAU,CAAC;QAElC,gBAAW,GAAY,KAAK,CAAC;IAIsB,CAAC;IAE3D,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,wDAAS,CAAC;YACpC,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;YACvF,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;SAC9F,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB;QAChB,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC9D,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACpE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;IACH,CAAC;IAED,eAAe,CAAC,eAAiC;QAC/C,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC;IACxF,CAAC;IAED,QAAQ,CAAC,iBAAmC;QAE1C,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE;YAE/F,MAAM,QAAQ,GAAG;gBACf,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;gBACjD,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;aACxD;YAED,IAAI,iBAAiB,CAAC,OAAO,EAAE;gBAC7B,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;aACvD;;gBAAM,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAEvC,KAAK,CAAC,UAAU,QAAQ,CAAC,KAAK,eAAe,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;YAClE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YAClD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACrD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;YACvD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;SAC3D;aACI;YACH,KAAK,CAAC,oCAAoC,CAAC,CAAC;SAC7C;IACH,CAAC;;wEApDU,YAAY;4FAAZ,YAAY;;QCZzB,0EAEE;QAAA,2EAID;QAAA,uDAIC;QAAA,4DAAQ;QAER,yEAUA;QAAA,2EAIC;QAAA,uDAIC;QAAA,4DAAQ;QAEV,yEAUA;QAAA,yEAEE;QAAA,0EASA;QAAA,6EAGC;QAAA,sEAAU;QAAA,4DAAQ;QAEnB,iFAQA;QAJE,mRAAU,wBAAgC,IAAC;QAJ7C,4DAQA;QAAA,6EAIE;QAAA,oEAGK;QACP,4DAAQ;QAEV,4DAAM;QAEN,8EAGC;QAFC,kRAAS,iBAA0B,IAAC;QAErC,kEAAM;QAAA,4DAAS;QAElB,4DAAO;;;QAnF6B,2FAA8B;QAKhE,0DAA8G;QAA9G,qOAA8G;QAC/G,0DAIC;QAJD,uOAIC;QAeE,0DAAoH;QAApH,4OAAoH;QACrH,0DAIC;QAJD,6PAIC;QAGA,0DAAqB;QAArB,kFAAqB;QAiBnB,0DAAuB;QAAvB,oFAAuB;QAoBR,0DAE4B;QAF5B,sKAE4B;;6FD5DpC,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACmB;AAEF;;AAczD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,4EAAgB,CAAC,YALpB;YACP,uEAAa;YACb,0DAAW;YACX,kEAAmB;SACpB;mIAIU,SAAS,mBAVlB,2DAAY,aAGZ,uEAAa;QACb,0DAAW;QACX,kEAAmB;6FAKV,SAAS;cAZrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;oBACX,kEAAmB;iBACpB;gBACD,SAAS,EAAE,CAAC,4EAAgB,CAAC;gBAC7B,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidatorService {\n  constructor() { }\n\n  emailValidator(control: AbstractControl): { [key: string]: any } | null {\n    const isValid = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(control.value);\n    if (isValid) return null;\n    return { 'incorrect': true };\n  }\n\n  passwordValidator(control: AbstractControl): { [key: string]: any } | null {\n    const isValid = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/.test(control.value);\n    if (isValid) return null;\n    return { 'incorrect': true };\n  }\n}\n","import { OnInit } from '@angular/core';\nimport { AfterContentInit } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { ValidatorService } from './services/validator.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, AfterContentInit {\n\n  public passwordType: string = 'password';\n\n  public isRemebered: boolean = false;\n\n  public loginInfoControl: FormGroup;\n\n  constructor(private validatorService: ValidatorService) { }\n\n  ngOnInit() {\n    this.loginInfoControl = new FormGroup({\n      email: new FormControl('', [Validators.required, this.validatorService.emailValidator]),\n      password: new FormControl('', [Validators.required, this.validatorService.passwordValidator]),\n    });\n  }\n\n  ngAfterContentInit() {\n    if (localStorage.getItem('log')) {\n      const userInfo = JSON.parse(localStorage.getItem('log'));\n      this.loginInfoControl.controls.email.setValue(userInfo.email);\n      this.loginInfoControl.controls.password.setValue(userInfo.password);\n      this.isRemebered = true;\n    }\n  }\n\n  showingPassword(visibilityInput: HTMLInputElement): void {\n    visibilityInput.checked ? this.passwordType = 'text' : this.passwordType = 'password';\n  }\n\n  onSubmit(remembranceTarget: HTMLInputElement): void {\n\n    if (this.loginInfoControl.controls.password.valid && this.loginInfoControl.controls.email.valid) {\n\n      const userInfo = {\n        email: this.loginInfoControl.controls.email.value,\n        password: this.loginInfoControl.controls.password.value\n      }\n\n      if (remembranceTarget.checked) {\n        localStorage.setItem('log', JSON.stringify(userInfo));\n      } else localStorage.setItem('log', '');\n\n      alert(`email: ${userInfo.email}\\npassword: ${userInfo.password}`);\n      this.loginInfoControl.controls.email.setValue('');\n      this.loginInfoControl.controls.password.setValue('');\n      this.loginInfoControl.controls.email.markAsUntouched();\n      this.loginInfoControl.controls.password.markAsUntouched();\n    }\n    else {\n      alert('Please, enter all fields correctly');\n    }\n  }\n}\n","<form  class=\"main-container__form\" [formGroup]=\"loginInfoControl\">\n\n  <label\n  class=\"form__label\"\n  for=\"email\"\n  [ngClass]=\"{highlighted: (!loginInfoControl.controls.email.valid && loginInfoControl.controls.email.touched)}\"\n>{{\n  (!loginInfoControl.controls.email.valid && loginInfoControl.controls.email.touched) ? \n  \"Plese, input corect part followed before and after '@'\" :\n  \"Email Address\"\n}}</label>\n\n  <input\n    type=\"email\"\n    class=\"form__input\"\n    placeholder=\"example@address.com\"\n    name=\"email\"\n    formControlName=\"email\"\n    #emailInput\n    autocomplete=\"on\"\n  >\n\n  <label\n    class=\"form__label\"\n    for=\"password\"\n    [ngClass]=\"{highlighted: (!loginInfoControl.controls.password.valid && loginInfoControl.controls.password.touched)}\"\n  >{{\n    (!loginInfoControl.controls.password.valid && loginInfoControl.controls.password.touched) ? \n    'Plese, include minimum eight characters, at least one letter and one number' :\n    'Password'\n  }}</label>\n\n  <input\n    [type]=\"passwordType\"\n    class=\"form__input\"\n    placeholder=\"&#8226;&#8226;&#8226;&#8226;&#8226;&#8226;&#8226;&#8226;\"\n    name=\"password\"\n    formControlName=\"password\"\n    #passwordInput\n    autocomplete=\"on\"\n  >\n\n  <div class=\"form__checkbox-container\">\n\n    <input\n      class=\"checkbox-container__checkbox-remembrance\"\n      type=\"checkbox\"\n      checked\n      name=\"remembrance\"\n      #remembranceInput\n      [checked]=\"isRemebered\"\n    >\n    \n    <label\n      class=\"checkbox-container__remembrance-label\"\n      for=\"remembrance\"\n    >Remeber me</label>\n    \n    <input\n      class=\"checkbox-container__checkbox-visibility\"\n      type=\"checkbox\"\n      name=\"visibility\"\n      (change)=\"showingPassword(visibilityInput)\"\n      #visibilityInput\n    >\n    \n    <label\n      class=\"checkbox-container__visibility-icon\"\n      for=\"visibility\"\n    >\n      <i class=\"far\" [ngClass]=\"{\n        'fa-eye': !visibilityInput.checked,\n        'fa-eye-slash': visibilityInput.checked}\"\n      ></i>\n    </label>\n    \n  </div>\n\n  <button\n    (click)=\"onSubmit(remembranceInput)\"\n    class=\"form__button\"\n  >Log in</button>\n  \n</form>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ValidatorService } from './services/validator.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [ValidatorService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}