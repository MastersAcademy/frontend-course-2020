{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  LOGIN = /^[a-z0-9._-]{2,}\\@[a-z0-9]+\\.[a-z]{2,}$/i;\n  PASSWORD = /^[a-z0-9]{5,}$/i;\n  formGroupData!: FormGroup;\n  login!: string | null;\n  password!: string | null;\n  rememberForm!: boolean;\n  hide: boolean = true;\n  loginIsError!: boolean;\n  passwordIsError!: boolean;\n\n  toggleHidePass() {\n    this.hide = !this.hide;\n  }\n\n  ngOnInit() {\n      this.getStore();\n      this.formGroupData = new FormGroup({\n      login: new FormControl(this.login, [\n          Validators.required,\n          Validators.pattern(this.LOGIN),\n        ]),\n      password: new FormControl(this.password, [\n          Validators.required,\n          Validators.pattern(this.PASSWORD),\n        ]),\n      rememberForm: new FormControl(Boolean),\n    });\n    this.formGroupData.valueChanges.subscribe(() => {\n        this.loginIsError = this.formGroupData.controls.login.errors !== null;\n        this.passwordIsError = this.formGroupData.controls.password.errors !== null;\n    })\n}\n\n  public getStore():void {\n    let stor = localStorage.getItem('loginParams');\n    if (stor !== null) {\n      let savedForm = JSON.parse(stor);\n      this.login = atob(savedForm.item);\n      this.password = atob(savedForm.key);\n    } else {\n      this.login = null;\n      this.password = null;\n    }\n  }\n\n  public setLoginFormData(): void {\n      const formData = {\n        item: btoa(this.formGroupData.value.login),\n        key: btoa(this.formGroupData.value.password)\n      }\n      const message = `Your login is saved. login-name: ${this.formGroupData.value.login}, password: ${this.formGroupData.value.password}`;\n      this.formGroupData.value.rememberForm? (localStorage.setItem('loginParams', JSON.stringify(formData)),\n      alert(message)) : alert(message);\n      this.formGroupData.reset();\n  }\n}\n\n","<div class=\"wrapper\">\n  <div class=\"form-wrapper\">\n    <form class=\"form\"\n          [formGroup]=\"formGroupData\"\n          (ngSubmit)=\"setLoginFormData()\"\n    >\n      <div class=\"form-field\">\n        <div class=\"field-text\">login:</div>\n        <input class=\"field-input\"\n            [class.field-invalid]=\"loginIsError\"\n            type=\"text\"\n            placeholder=\"example@mail.com\"\n            formControlName=\"login\">\n      </div>\n      <div class=\"form-field\">\n        <div class=\"field-text\">password:</div>\n        <div class=\"pass-container\">\n          <input class=\"field-input\"\n              [class.field-invalid]=\"passwordIsError\"\n              [type]=\"hide ? 'password' : 'text'\"\n              placeholder=\"more than any 5\"\n              formControlName=\"password\">\n\n          <span class=\"hide-pass-icon\" (click)=\"toggleHidePass()\">\n            <i class=\"fas fa-eye-slash\" *ngIf=\"hide\"></i>\n            <i class=\"fas fa-eye\" *ngIf=\"!hide\"></i>\n          </span>\n        </div>\n        <hr>\n      </div>\n      <div class=\"btn-container\">\n        <button class=\"submit-btn\"\n            type=\"submit\"\n            [disabled]=\"formGroupData.invalid\">\n          SIGN IN\n        </button>\n        <div class=\"btn-container-field\">\n          <div class=\"field-text field-text-checkbox\">remember me</div>\n          <input class=\"field-checkbox\" type=\"checkbox\" formControlName=\"rememberForm\">\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}