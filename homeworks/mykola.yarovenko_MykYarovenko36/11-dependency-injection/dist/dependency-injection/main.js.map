{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/vehicle.service.ts","./src/app/mocks/vehicles.mock.ts","./src/app/directives/index.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pipes/transform-adress.pipe.ts","./src/app/app.module.ts","./src/app/directives/color-link.directive.ts","./src/app/pipes/transform-card-description.ts","./src/app/vehicle/vehicle.component.ts","./src/app/vehicle/vehicle.component.html","./src/app/directives/adress-link.directive.ts","./src/app/services/index.ts","./src/app/pipes/index.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { MOCK_VEHICLES } from '../mocks/vehicles.mock';\r\nimport { MockVehicle } from '../models/vehicle';\r\n\r\n@Injectable()\r\nexport class VehicleService {\r\n  constructor() {}\r\n\r\n  getVehicleLayouts(): Observable<MockVehicle[]> {\r\n    return of(MOCK_VEHICLES);\r\n  }\r\n}\r\n","import * as faker from 'faker';\r\n\r\n\r\nconst count = 20;\r\nlet seed = 1222;\r\n\r\n// tslint:disable-next-line:typedef\r\nfunction getFakeVehicle() {\r\n  seed += 1;\r\n  faker.seed(seed);\r\n\r\n  return {\r\n    color: faker.vehicle.color(),\r\n    fuel: faker.vehicle.fuel(),\r\n    manufacturer: faker.vehicle.manufacturer(),\r\n    model: faker.vehicle.model(),\r\n    type: faker.vehicle.type(),\r\n    vehicle: faker.vehicle.vehicle(),\r\n    vin: faker.vehicle.vin(),\r\n\r\n    post: {\r\n      slug: faker.helpers.slugify(faker.name.title()),\r\n      protocol: faker.internet.protocol(),\r\n    },\r\n\r\n    cost: {\r\n      account: faker.finance.account(),\r\n      accountName: faker.finance.accountName(),\r\n      amount: faker.finance.amount(),\r\n      currencyCode: faker.finance.currencyCode(),\r\n    },\r\n  };\r\n}\r\n\r\nexport const MOCK_VEHICLES = new Array(count).fill(0).map(getFakeVehicle);\r\n","import { LinkColor } from './color-link.directive';\r\nimport { LinkAdress } from './adress-link.directive';\r\n\r\nexport const appDirectives = [\r\n  LinkColor,\r\n  LinkAdress,\r\n];\r\nexport * from './adress-link.directive';\r\nexport * from './color-link.directive';\r\n","import { Component } from '@angular/core';\n\nimport { delay } from 'rxjs/operators';\nimport { MockVehicle } from './models/vehicle';\nimport { VehicleService } from './services';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    mockVehicles: MockVehicle[] = [];\n    itemData: boolean = false;\n    isLoading: boolean = true;\n    constructor (private vehicleServices: VehicleService) {\n        this.getCars();\n    }\n    private getCars(): void {\n        this.vehicleServices.getVehicleLayouts().pipe(\n          delay(2000),\n          ).subscribe(\n                (arg : MockVehicle[]) => {\n                    this.mockVehicles = arg;\n                    this.itemData = true;\n                    this.isLoading = false;\n                });\n    }\n}\n","<div class=\"wrapper\">\n    <div *ngIf=\"isLoading\" class=\"loader\">\n      <img src=\"https://practicaldev-herokuapp-com.freetls.fastly.net/assets/loading-ellipsis-b714cf681fd66c853ff6f03dd161b77aa3c80e03cdc06f478b695f42770421e9.svg\" alt=\"Loading...\">\n    </div>\n    <div *ngIf=\"!isLoading\">\n        <div *ngIf=\"itemData; else itemError\" class=\"cards-container\">\n          <app-vehicle\n              *ngFor=\"let item of mockVehicles\"\n              [vehicle]=\"item\"\n          >\n         </app-vehicle>\n        </div>\n        <ng-template #itemError>\n            <p class=\"error-message\">Something went wrong!  :-(</p>\n        </ng-template>\n    </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'transformAdressPipe'\r\n})\r\n\r\nexport class TransformAdressPipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    return  `https://www.google.com/search?q=${value}`;\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { appServices } from './services';\nimport { appDirectives } from './directives';\nimport { appPipes } from './pipes';\nimport { VehicleComponent } from './vehicle/vehicle.component';\n\n@NgModule({\n    declarations: [\n      ...appDirectives,\n      ...appPipes,\n      AppComponent,\n      VehicleComponent,\n    ],\n    imports: [\n      BrowserModule,\n      AppRoutingModule\n    ],\n    providers: [\n      ...appServices,\n      ...appPipes,\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Directive, AfterViewInit, Input, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({ selector: '[protocolType]' })\r\nexport class LinkColor implements AfterViewInit {\r\n    @Input() protocolType!: string;\r\n    colorRed: string = \"#B22222\";\r\n    colorGreen: string = \"#32CD32\";\r\n    constructor(private el: ElementRef) {}\r\n    ngAfterViewInit(): void {\r\n        this.protocolType === 'https' ?\r\n        this.el.nativeElement.style.border = `5px solid ${this.colorGreen}` :\r\n        this.el.nativeElement.style.border =  `5px solid ${this.colorRed}`;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'card-description'\r\n})\r\n\r\nexport class CardDescriptionPipe implements PipeTransform {\r\n  transform(value: string[]): string {\r\n      return `${value[0]}-${value[1]} (${value[2]})`;\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MockVehicle } from '../models/vehicle';\nimport { CardDescriptionPipe } from '../pipes';\n\n@Component({\n    selector: 'app-vehicle',\n    templateUrl: './vehicle.component.html',\n    styleUrls: ['./vehicle.component.scss']\n})\nexport class VehicleComponent implements OnInit {\n    @Input() vehicle!: MockVehicle;\n    subscribeURL!: string[];\n    vehicleItem !: MockVehicle;\n    cardDescription: string = '';\n\n    constructor(\n        private cardDescriptionPipe: CardDescriptionPipe\n    ) {}\n\n    ngOnInit(): void {\n        this.vehicleItem = this.vehicle;\n        this.subscribeURL = [this.vehicleItem.post.protocol, `${this.vehicleItem.manufacturer}+${this.vehicleItem.model}`];\n        this.cardDescription = this.cardDescriptionPipe.transform([this.vehicleItem.manufacturer, this.vehicleItem.model, this.vehicleItem.fuel]);\n    }\n}\n\n","<a class=\"card-link\" [requestData]=\"subscribeURL\">\n  <div class=\"card\" [protocolType]=\"vehicleItem.post.protocol\">\n    <div>\n      <div class=\"card-field\">\n        <p>\n          Field\n        </p>\n        <hr>\n      </div>\n      <div class=\"card-field\">\n        <p>\n          Added from :\n        </p>\n      </div>\n      <div class=\"card-field\">\n        <p>\n          Vehicle :\n        </p>\n      </div>\n      <div class=\"card-field\">\n        <p>\n          Price :\n        </p>\n      </div>\n    </div>\n    <div>\n      <div class=\"card-field\">\n        <p>\n          Value\n        </p>\n        <hr>\n      </div>\n      <div>\n        <div class=\"card-field\">\n          <p>\n            {{vehicleItem.post.slug}}\n          </p>\n        </div>\n        <div class=\"card-field\">\n          <p>\n            {{cardDescription}}\n          </p>\n        </div>\n        <div class=\"card-field\">\n          <p>\n            {{vehicleItem.cost.amount | currency: vehicleItem.cost.currencyCode: \"symbol-narrow\"}}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"card-image\">\n      <img src=\"../../assets/car.jpg\" alt=\"image\">\n    </div>\n  </div>\n  </a>\n\n","import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\r\nimport { TransformAdressPipe } from '../pipes';\r\n\r\n@Directive({ selector: '[requestData]' })\r\n\r\nexport class LinkAdress implements AfterViewInit {\r\n\r\n  @Input() requestData!: string[];\r\n\r\n  constructor (private el: ElementRef, private transformAdressPipe: TransformAdressPipe) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.requestData[0] === 'https') {\r\n        this.el.nativeElement.setAttribute('href', this.transformAdressPipe.transform(this.requestData[1]));\r\n        console.log(this.requestData);\r\n    }\r\n  }\r\n}\r\n","import { VehicleService } from './vehicle.service';\r\n\r\nexport const appServices = [\r\n  VehicleService,\r\n];\r\n\r\nexport * from './vehicle.service';\r\n","import { TransformAdressPipe } from './transform-adress.pipe';\r\nimport { CardDescriptionPipe } from './transform-card-description';\r\nexport const appPipes = [\r\n  TransformAdressPipe,\r\n  CardDescriptionPipe,\r\n];\r\n\r\nexport * from './transform-adress.pipe';\r\nexport * from './transform-card-description';\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}