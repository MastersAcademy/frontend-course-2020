{"version":3,"sources":["./src/app/services/loader.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/interceptor/some.interceptor.ts","./src/app/services/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class LoaderService {\n  constructor() { }\n\n  isLoading = new Subject<boolean>();\n  show(): void {\n    this.isLoading.next(true);\n  }\n  hide(): void {\n    this.isLoading.next(false);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription, Subject } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { LoaderService } from './services/loader.service';\nimport { UserService } from './services/user.service';\nimport { Page } from './models/page.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  pages: number[] = [];\n\n  pageConfig = {\n    page: '1',\n    perPage: '2',\n  };\n\n  title = 'httpclient';\n\n  pageData: Page | undefined;\n\n  private subscription: Subscription = new Subscription();\n\n  constructor(private userService: UserService, public loaderService: LoaderService) {}\n\n  isLoading: Subject<boolean> = this.loaderService.isLoading;\n  startLoader = true;\n\n  ngOnInit(): void {\n    this.updatePageFromSerrver();\n    this.isLoading.subscribe(() => this.startLoader = false);\n  }\n\n  updatePageFromSerrver(): void {\n    this.subscription.add(this.userService.getUsers(this.pageConfig.page, this.pageConfig.perPage).subscribe((users: Page) => {\n      this.pageData = users;\n      this.pages = Array(this.pageData.total_pages).fill(undefined).map((x, i) => (i + 1));\n    }));\n  }\n\n  selectPage(pageNumber: number): void {\n    this.pageConfig.page = pageNumber.toString();\n    this.updatePageFromSerrver();\n  }\n\n  changePerPage(event: Event ): void {\n    this.pageConfig.page = (1).toString();\n    this.pageConfig.perPage = (event.target as HTMLInputElement).value;\n    this.updatePageFromSerrver();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<div *ngIf=\"startLoader\" class=\"page-loader\">loading</div>\n<div class=\"grid-wrap\">\n  <h1 class=\"page-title\">{{ title }}</h1>\n\n  <div class=\"user-profile-card\" [class.user-card-wait]=\"isLoading | async\"  *ngFor=\"let user of pageData?.data\">\n  <div\n    class=\"user-avatar\"\n    [style.background-image]=\"'url(' + user.avatar + ')'\"\n  ></div>    \n    <div class=\"user-name\">\n      <span class=\"user-first-name user-name-text inline-block-text\">\n        {{ user.first_name }} &nbsp;\n      </span>\n      <span class=\"user-second-name user-name-text inline-block-text\">\n        {{ user.last_name }}\n      </span>\n    </div>\n    <div class=\"user-email inline-block-text\">{{ user.email }}</div>\n  </div>\n\n  <div class=\"pagination\">\n    <a\n      *ngFor=\"let number of pages\"\n      href=\"#\"\n      [class.active]=\"pageData?.page === number\"\n      (click)=\"selectPage(number)\"\n      >{{ number }}</a\n    >\n  </div>\n\n  <div class=\"per-page-selector-position\">\n    <select (change)=\"changePerPage($event)\" class=\"per-page-selector\" size=\"1\" name=\"perPageSelector\">\n      <option selected value=\"4\">2</option>\n      <option value=\"4\">4</option>\n      <option value=\"6\">6</option>\n      <option value=\"12\">12</option>\n    </select>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { SomeInterceptor } from './interceptor/some.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: SomeInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor, HttpEvent, HttpHandler, HttpRequest\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoaderService } from '../services/loader.service';\n\n@Injectable()\nexport class SomeInterceptor implements HttpInterceptor {\n  constructor(public loaderService: LoaderService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.loaderService.show();\n    req = req.clone({ headers: req.headers.append('Accept-Language', 'en-US;uk_UA;ru-RU;de_DE;fr_FR;')});\n    return next.handle(req).pipe(\n      finalize(() => this.loaderService.hide()),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Page } from '../models/page.model';\n\n@Injectable({providedIn: 'root'})\n\nexport class UserService {\n  ROOT_URL = 'https://reqres.in/api/users';\n  options = {\n    params: {\n      page: '1',\n      per_page: '2',\n      delay: '2'\n    },\n    headers: { Authorization: 'i2ojjfsoiejfs9' }\n  };\n\n  constructor(private http: HttpClient) { }\n\n  getUsers(getPageId: string | number, usersPerPage: string | number): Observable<Page> {\n    this.options.params.page = getPageId.toString();\n    this.options.params.per_page = usersPerPage.toString();\n    return this.http.get<Page>(this.ROOT_URL, this.options).pipe();\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}