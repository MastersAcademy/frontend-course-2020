{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/interceptors/loader.interceptor.ts","webpack:///src/app/models/user.requset.option.ts","webpack:///src/app/services/index.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","userService","users","pageOptions","myBool$","subscribe","newBool","isLoading","params","page","per_page","getUser","getUsers","user","pageNumber","onPageChanged","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","LoaderInterceptor","request","next","clone","headers","set","boolSubject","handle","pipe","UserRequestOptions","appServices","UserService","http","ROOT_URL","asObservable","options","get","data","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { User } from './models/user.model';\nimport { UserRequestOptions } from './models/user.requset.option';\nimport { UserService } from './services';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  users: User[] = [];\n  isLoading: boolean;\n  pageOptions: UserRequestOptions;\n\n  constructor(private userService: UserService) {\n    this.pageOptions = new UserRequestOptions();\n    this.userService.myBool$.subscribe((newBool: boolean) => { this.isLoading = newBool });\n  }\n\n  ngOnInit() {\n    this.pageOptions.params.page = '1';\n    this.pageOptions.params.per_page = '2';\n    this.getUser();\n  }\n\n  getUser() {\n    this.userService.getUsers(this.pageOptions)\n    .subscribe((user) => {\n      this.users = user;\n    });\n  }\n\n  onPageChanged(pageNumber) {\n    this.pageOptions.params.page = pageNumber;\n    this.getUser();\n  }\n}\n","<div *ngIf=\"isLoading\" class=\"overlay\">\n<mat-progress-spinner class=\"spinner\" \n[color]=\"'primary'\" \n[mode]=\"'indeterminate'\" \n[value]=\"50\">\n</mat-progress-spinner>\n</div>\n\n<div *ngIf=\"!isLoading\"  class=\"container\">\n  <div *ngFor=\"let user of users\">\n  <div class=\"container-image\">\n    <img src=\"{{ user.avatar }} \" alt=\"\">\n  </div>\n  <div class=\"container-info\">\n    {{ user.first_name }}\n    {{ user.last_name }} <br>\n    {{ user.email }}\n  </div>\n</div>\n</div>\n\n<ngb-pagination class=\"d-flex justify-content-center\" \n[collectionSize]=\"12\" \n[pageSize]=\"2\" \n(pageChange)=\"onPageChanged($event)\">\n</ngb-pagination>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { appServices } from './services';\nimport { LoaderInterceptor } from './interceptors/loader.interceptor';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    BrowserAnimationsModule,\n    NgbModule\n  ],\n  providers: [\n    ...appServices, \n    { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { finalize } from \"rxjs/operators\";\nimport { UserService } from '../services';\n@Injectable()\nexport class LoaderInterceptor implements HttpInterceptor {\n\n    constructor(public userService: UserService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n      request = request.clone({headers: request.headers.set('Accept-Language', 'en-En')});\n      request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\n      this.userService.boolSubject.next(true)\n\n      return next.handle(request).pipe(\n        finalize(() => this.userService.boolSubject.next(false))\n      );\n    }\n  }\n","export class UserRequestOptions {\n  params = {\n    'page': '',\n    'per_page': ''\n  }\n}","import { UserService } from './user.service';\n\nexport const appServices = [\n  UserService\n];\n\nexport * from './user.service';","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/user.model';\nimport { Page } from '../models/page.model';\nimport { UserRequestOptions } from '../models/user.requset.option';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  ROOT_URL = 'https://reqres.in/api/users';\n\n  boolSubject: Subject<boolean>;\n  myBool$: Observable<boolean>;\n  \n  constructor(private http: HttpClient) {\n    this.boolSubject = new Subject<boolean>();\n    this.myBool$ = this.boolSubject.asObservable();\n   }\n\n  getUsers(options: UserRequestOptions): Observable<User[]> {\n    return this.http.get<Page>(this.ROOT_URL, options).pipe(\n      map(({ data }) => data),\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}