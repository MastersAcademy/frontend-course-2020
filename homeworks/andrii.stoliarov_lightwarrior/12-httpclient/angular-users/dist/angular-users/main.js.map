{"version":3,"sources":["./src/environments/environment.ts","./src/app/interceptors/auth.interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/index.ts","./src/app/services/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(initialRequest: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const request = initialRequest.clone({\n      headers: initialRequest.headers.set('Accept-Language', 'en-US,en;q=0.9,fr;q=0.8,de;q=0.7,*;q=0.5').append('Auth', 'RANDOM TEXT')\n    })\n\n    return next.handle(request);\n  }\n\n}\n","import { Component, Input, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { User } from './interfaces/user';\nimport { UserService } from './services';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  users: User[] = [];\n  currentPage: number = 1;\n  loading: boolean = true;\n  private subscription: Subscription = new Subscription();\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit() {\n    this.subscription.add(this.getUsers());\n  }\n\n  get paginationParams(): Object {\n    return {itemsPerPage: 2, currentPage: this.currentPage};\n  }\n\n  getUsers() {\n      return this.userService.getUsers().subscribe((users: User[]) => {\n      this.users = users;\n      this.loading = false;\n    })\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","\n<div class=\"container\">\n  <h1>Users cards</h1>\n  <hr class=\"divider\">\n  <span class=\"loader\" *ngIf=\"loading; else cards\">Loading...</span>\n  <ng-template #cards>\n    <div class=\"flex-container\">\n      <div *ngFor=\"let user of users | paginate: paginationParams\" class=\"user-card\">\n        <div><img src=\"{{ user.avatar }}\" alt=\"avatar\"></div>\n        <p><span class=\"font-bold\">First name: </span>{{ user.first_name }}</p>\n        <p><span class=\"font-bold\">Last name: </span>{{ user.last_name }}</p>\n        <p><span class=\"font-bold\">Email: </span>{{ user.email }}</p>\n      </div>\n    </div>\n  </ng-template>\n  <hr class=\"divider\">\n  <pagination-controls (pageChange)=\"currentPage = $event\"></pagination-controls>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    NgxPaginationModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { UserService } from './user.service';\n\nexport const appService = [\n  UserService\n];\n\nexport * from './user.service';\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { User } from '../interfaces/user';\nimport { UsersResponse } from '../interfaces/users-response';\n\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  ROOT_URL: string = 'https://reqres.in/api/users';\n\n  constructor(private http: HttpClient) {}\n\n  getUsers(): Observable<User[]> {\n    const options = {\n      params: {per_page: '6'}\n    };\n    return this.http.get<UsersResponse>(this.ROOT_URL, options).pipe(\n      map(({ data }) => data),\n      delay(2000)\n    );\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}