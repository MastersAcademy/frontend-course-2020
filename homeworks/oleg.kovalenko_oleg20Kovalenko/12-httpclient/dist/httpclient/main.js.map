{"version":3,"sources":["./src/app/interceptor/auth.interceptor.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/user.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor() {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const token: string | null = localStorage.getItem('token');\n\n    if (token) {\n      request = request.clone({\n        headers: request.headers.set('Accept-Language', 'Name' + token),\n      });\n    }\n\n    if (!request.headers.has('Content-Type')) {\n      request = request.clone({\n        headers: request.headers.set('Content-Type', 'application/json'),\n      });\n    }\n\n    return next.handle(request).pipe(\n      tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n        }\n        return event;\n      })\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { User } from './models/user.model';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'httpclient';\n\n  userData: User[] = [];\n  loading: boolean = false;\n  collection = [];\n  page: number = 1;\n  count = 0;\n  pageSize = 2;\n\n  private subscription: Subscription = new Subscription();\n\n  constructor(private userService: UserService) {}\n\n  handlePageChange(event: number) {\n    this.page = event;\n    this.getUser();\n  }\n\n  ngOnInit() {\n    this.getUser();\n    this.subscription.add(\n      this.userService.getUsers().subscribe((users: User[]) => {\n        this.userData = users;\n      })\n    );\n  }\n  private getUser(): void {\n    this.loading = true;\n    this.userService\n      .getUsers()\n      .pipe(finalize(() => (this.loading = false)))\n      .subscribe((userData: User[]) => {\n        this.userData = userData;\n      });\n  }\n}\n","<div class=\"box\">\n  <div *ngIf=\"loading\" class=\"loading\"></div>\n  <div *ngIf=\"!loading\" class=\"users\">\n    <div class=\"user-list\">\n      <div *ngFor=\"let user of userData | paginate: {\n      itemsPerPage: pageSize,\n      currentPage: page,\n      totalItems: count }\">\n        <div class=\"user-card\">\n          <img src=\"{{ user.avatar }}\" alt=\"\">\n          <p>ID: {{ user.id }}</p><br>\n          <p>First Name: {{ user.first_name }}</p><br>\n          <p>Last Name: {{ user.last_name }}</p><br>\n          <p>Email: {{ user.email }} </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"paginator\">\n      <pagination-controls (pageChange)=\"handlePageChange($event)\"></pagination-controls>\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './interceptor/auth.interceptor';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, NgxPaginationModule],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { User } from '../models/user.model';\nimport { Page } from '../models/page.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  ROOT_URL = 'https://reqres.in/api/users';\n  options = {\n    params: {\n      page: '1',\n      per_page: '6',\n    },\n    headers: { Authorization: 'qwerty1234' },\n  };\n\n  constructor(private http: HttpClient) {}\n\n  getUsers(): Observable<User[]> {\n    return this.http\n      .get<Page>(this.ROOT_URL, this.options)\n      .pipe(map(({ data }) => data));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}