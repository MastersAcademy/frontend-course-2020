{"version":3,"sources":["./src/app/service/vehicles.service.ts","./src/app/mocks/index.ts","./src/environments/environment.ts","./src/app/directive/change.directive.ts","./src/app/mocks/vechicles.mock.ts","./src/app/service/index.ts","./src/app/pipe/currency.pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pipe/index.ts","./src/app/pipe/vehicles.pipe.ts","./src/app/directive/index.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { MOCK_VEHICLES } from '../mocks';\nimport { delay } from 'rxjs/operators';\nimport { Vehicles } from '../models';\n\n@Injectable()\nexport class VehicleService {\n\n  constructor() {}\n\n  getVehicles(): Observable<Vehicles[]> {\n    return of(MOCK_VEHICLES).pipe(delay(2000));\n  }\n}\n","export * from './vechicles.mock';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { AfterViewInit, Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[appChange]',\n})\nexport class ChangeDirective implements AfterViewInit {\n  constructor(private el: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    if (this.el.nativeElement.lastChild.textContent === 'http') {\n      this.el.nativeElement.style.color = 'red';\n    }\n  }\n}\n","import * as faker from 'faker';\n\n\nconst count = 20;\nlet seed = 1222;\n\n// tslint:disable-next-line:typedef\nfunction getFakeVehicle() {\n  seed += 1;\n  faker.seed(seed);\n\n  return {\n    color: faker.vehicle.color(),\n    fuel: faker.vehicle.fuel(),\n    manufacturer: faker.vehicle.manufacturer(),\n    model: faker.vehicle.model(),\n    type: faker.vehicle.type(),\n    vehicle: faker.vehicle.vehicle(),\n    vin: faker.vehicle.vin(),\n\n    post: {\n      slug: faker.helpers.slugify(faker.name.title()),\n      protocol: faker.internet.protocol(),\n    },\n\n    cost: {\n      account: faker.finance.account(),\n      accountName: faker.finance.accountName(),\n      amount: faker.finance.amount(),\n      currencyCode: faker.finance.currencyCode(),\n    },\n  };\n}\n\nexport const MOCK_VEHICLES = new Array(count).fill(0).map(getFakeVehicle);\n","import { VehicleService } from './vehicles.service';\n\nexport const appService = [VehicleService];\n\nexport * from './vehicles.service';\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Vehicles } from '../models';\n\n@Pipe({\n  name: 'currencyPipe',\n})\nexport class CurrencyPrisePipe implements PipeTransform {\n  transform(vehicles: Vehicles): string {\n    return vehicles.cost.currencyCode;\n  }\n}","import { Component } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { Vehicles } from './models';\nimport { VehicleService } from './service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'dependency-injection';\n\n  vehicles: Vehicles[] = [];\n\n  vehiclesLoading: boolean = false;\n\n  constructor(private vehicleService: VehicleService) {\n    this.getVehicles();\n  }\n\n  private getVehicles(): void {\n    this.vehiclesLoading = true;\n    this.vehicleService\n      .getVehicles()\n      .pipe(finalize(() => (this.vehiclesLoading = false)))\n      .subscribe((vehicles: Vehicles[]) => {\n        this.vehicles = vehicles;\n      });\n  }\n}\n","<div class=\"container\">\n  <div *ngIf=\"vehiclesLoading\" class=\"loading\"></div>\n\n  <ul *ngIf=\"!vehiclesLoading\">\n    <li *ngFor=\"let vehicle of vehicles\" class=\"vehicle-list-item\">\n\n      <div>\n        <label class=\"vehicle-label\" appChange>Added from : <span class=\"vehicle-span\"\n            appChange>{{ vehicle.post.protocol }}</span>\n        </label>\n      </div>\n\n      <div>\n        <label class=\"vehicle-label\">Vehicle :</label>\n        <span class=\"vehicle-span\">{{ vehicle | vehiclesPipe }}</span>\n      </div>\n\n      <div>\n        <label class=\"vehicle-label\">Price :</label>\n        <span class=\"vehicle-span\">{{ vehicle.cost.amount | currency }} {{ vehicle.cost.currencyCode }}</span>\n      </div>\n    </li>\n  </ul>\n\n</div>\n\n<router-outlet></router-outlet>\n","import { appPipe } from './pipe';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { appService } from './service';\nimport { appDirective } from './directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ...appDirective,\n    ...appPipe,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [\n    ...appService,\n    ...appPipe,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CurrencyPipe } from '@angular/common';\nimport { VehiclesPipe } from './vehicles.pipe';\nimport { CurrencyPrisePipe } from './currency.pipe';\n\nexport const appPipe = [ VehiclesPipe, CurrencyPrisePipe];\n\nexport * from './vehicles.pipe';\nexport * from './currency.pipe';\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Vehicles } from '../models';\n\n@Pipe({\n  name: 'vehiclesPipe',\n})\n\nexport class VehiclesPipe implements PipeTransform {\n  transform(vehicles: Vehicles): string {\n    return `${vehicles.manufacturer} - ${vehicles.model}  (${vehicles.fuel})`\n  }\n}\n","import { ChangeDirective}  from './change.directive';\n\nexport const appDirective = [\n    ChangeDirective,\n];\n\nexport * from './change.directive';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}