{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'ng-forms';\n\n  ngOnInit(): void {\n    this.save();\n  }\n\n  profileForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', Validators.required),\n    checkbox: new FormControl(),\n  });\n\n  get registerFormControl() {\n    return this.profileForm.controls;\n  }\n\n  onSubmit() {\n    if (this.profileForm.value.checkbox) {\n      const itemData: string = btoa(JSON.stringify(this.profileForm.value));\n      localStorage.setItem('data', itemData);\n    } else {\n      localStorage.removeItem('data');\n    }\n    alert(\n      `Email: ${this.profileForm.value.email} Password: ${this.profileForm.value.password}`\n    );\n    this.profileForm.reset();\n  }\n\n  save(): void {\n    if (localStorage.getItem('data')) {\n      const itemData: string = atob(<string>localStorage.getItem('data'));\n      const data = JSON.parse(itemData);\n      this.profileForm.setValue({\n        email: data.email,\n        password: data.password,\n        checkbox: data.checkbox,\n      });\n    }\n  }\n}\n","<div class=\"container\">\n  <form [formGroup]=\"profileForm\" (ngSubmit)=\"onSubmit()\" class=\"box-form\">\n\n    <div class=\"form-group\">\n      <label for=\"email\" class=\"form-group__title\">Email:</label>\n      <input type=\"email\" class=\"form-control\" formControlName=\"email\" placeholder=\"email\">\n      <span class=\"error\"\n        *ngIf=\"(registerFormControl.email.touched) && registerFormControl.email.errors?.required\">\n        Email is required\n      </span>\n      <span class=\"error\" *ngIf=\"registerFormControl.email.touched && registerFormControl.email.errors?.email\">\n        Enter a valid email address\n      </span>\n    </div>\n\n    <div class=\"form-group\">\n      <label class=\"form-group__title\">Password:</label>\n      <input type=\"password\" class=\"form-control\" formControlName=\"password\" placeholder=\"password\">\n      <span class=\"error\"\n        *ngIf=\"(registerFormControl.password.touched) && registerFormControl.password.errors?.required\">\n        Password is required\n      </span>\n    </div>\n\n    <div class=\"form-checkbox\">\n      <input class=\"check\" type=\"checkbox\" id=\"check\" name=\"check\" formControlName=\"checkbox\">\n      <label class=\"check\" for=\"check\">remember me</label>\n    </div>\n\n    <button class=\"btn\" [disabled]=\"profileForm.invalid\" type=\"submit\">submit</button>\n  </form>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}