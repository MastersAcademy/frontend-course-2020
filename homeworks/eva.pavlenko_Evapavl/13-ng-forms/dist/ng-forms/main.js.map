{"version":3,"sources":["./src/app/text-field/text-field.component.ts","./src/app/text-field/text-field.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, forwardRef, ForwardRefFn, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nconst provideCustomControl = (componentRef: ForwardRefFn) => ({\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(componentRef),\n  multi: true\n})\n\ntype EmitTextChange = (value: string) => void;\n\n@Component({\n  selector: 'app-text-field',\n  templateUrl: './text-field.component.html',\n  styleUrls: ['./text-field.component.css'],\n  providers: [provideCustomControl(() => TextFieldComponent)]\n})\nexport class TextFieldComponent implements OnInit, ControlValueAccessor {\n  @Input() public label!: string;\n  public nativeControl: FormControl = new FormControl('');\n  private emitTextChange!: EmitTextChange;\n  fieldTextType: boolean = true;\n\n  toggleFieldTextType() {\n    this.fieldTextType = !this.fieldTextType;\n  }\n\n  public ngOnInit(): void {\n    this.nativeControl.valueChanges.subscribe((text: string) => this.emitTextChange?.(text))\n  }\n\n  public writeValue(text: string): void {\n    this.nativeControl.setValue(text);\n  }\n\n  public registerOnChange(emitTextChange: EmitTextChange): void {\n    this.emitTextChange = emitTextChange;\n  }\n\n  public registerOnTouched(fn: any): void {}\n\n}\n","<label>\n  <div class=\"form-label\"> {{label}}</div>\n  <input class=\"form-input\" [type]=\"fieldTextType ? 'text' : 'password'\" [formControl]=\"nativeControl\"/>\n  <span *ngIf=\"label === 'Password'\">\n  <span (click)=\"toggleFieldTextType()\">\n    <span *ngIf=\"fieldTextType; then visible else invisible\"></span>\n    <ng-template #visible>\n    <img alt=\"eye\" class=\"toggle-img\" src=\"https://img.icons8.com/android/344/visible.png\">\n      </ng-template>\n    <ng-template #invisible>\n  <img alt=\"eye\" class=\"toggle-img\"\n       src=\"assets/images/invisible.png\"/>\n </ng-template>\n    </span>\n  </span>\n</label>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  saveToLocalStorage(): void {\n    if (localStorage.getItem('data')) {\n      const dataInputs: string = atob(<string>localStorage.getItem('data'));\n      const data = JSON.parse(dataInputs);\n      this.loginForm.setValue({\n        email: data.email,\n        password: data.password,\n        rememberMe: data.rememberMe,\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    this.saveToLocalStorage();\n  }\n\n  public readonly loginForm: FormGroup = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required,\n      Validators.minLength(5)]),\n    rememberMe: new FormControl()\n  })\n\n  public get email(): string {\n    return this.loginForm.controls.email.value;\n  }\n\n  public get password(): string {\n    return this.loginForm.controls.password.value;\n  }\n\n  public showData() {\n    if (this.loginForm.value.rememberMe && this.loginForm.value.email && this.loginForm.value.password) {\n      const dataInputs: string = btoa(JSON.stringify(this.loginForm.value));\n      localStorage.setItem('data', dataInputs)\n    }\n\n    if(this.loginForm.status === 'VALID'){\n      alert(`\n    Email: ${this.email}\n    Password: ${this.password}\n    `)\n    } else if (!this.loginForm.value.email && !this.loginForm.value.password) {\n      alert('Please enter a value email and password')\n    }\n  }\n\n  isPasswordFieldValid(value: string) {\n    return this.loginForm.controls[value].invalid && !this.loginForm.controls[value].pristine\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"form-box\">\n    <form class=\"form\" [formGroup]=\"loginForm\" (ngSubmit)=\"showData()\">\n      <app-text-field class=\"form-text-field\" formControlName=\"email\" label=\"Email\"></app-text-field>\n      <div class=\"error-message\" *ngIf=\"isPasswordFieldValid('email')\">\n        Invalid email\n      </div>\n      <app-text-field class=\"form-text-field\" formControlName=\"password\" label=\"Password\"></app-text-field>\n      <div class=\"error-message\" *ngIf=\"isPasswordFieldValid('password')\">\n        Invalid password\n      </div>\n      <div class=\"form-checkbox\">\n        <label>\n          <input value=\"checkbox\" formControlName=\"rememberMe\" type=\"checkbox\"/>\n          Remember me\n        </label>\n      </div>\n      <div>\n        <button class=\"form-button\">submit</button>\n      </div>\n    </form>\n  </div>\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { TextFieldComponent } from './text-field/text-field.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TextFieldComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport '@angular/compiler';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}